name: Deploy to Azure

on:
  push:
    branches:
      - deploy  # Trigger the workflow on changes to the "deploy" branch.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v2
        # This step checks out the code from the repository into the workflow runner.

      # Step 2: Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        # This logs in to Azure using the credentials stored in the GitHub Secrets as `AZURE_CREDENTIALS`.

      # Step 3: Build and Push Docker Image
      - name: Build and Push Docker Image     
        run: |
          docker build -t mybookvaultregistry.azurecr.io/library-api:latest .
          echo ${{ secrets.AZ_ACR_PASSWORD }} | docker login mybookvaultregistry.azurecr.io -u ${{ secrets.AZ_ACR_USERNAME }} --password-stdin
          docker push mybookvaultregistry.azurecr.io/library-api:latest
        # This step:
        # 1. Builds the Docker image and tags it with the Azure Container Registry (ACR) URL.
        # 2. Logs in to the Azure Container Registry using credentials stored as GitHub Secrets.
        # 3. Pushes the Docker image to the Azure Container Registry.

      # Step 4: Deploy the Docker Image to Azure Web App
      - name: Deploy to Azure Web App
        run: |
          az webapp config container set -n bookvault-app -g MyWebAppRG -i mybookvaultregistry.azurecr.io/library-api:latest
          az webapp restart -n bookvault-app -g MyWebAppRG
        # This step:
        # 1. Sets the Azure Web App's container configuration to use the new Docker image....
        # 2. Restarts the Azure Web App to ensure the new container is running..
